:toc2:
:numbered:
:data-uri:
= Funktionen in **R**

== Funktionen in R

=== Was sind Funktionen?

* Funktionen sind Programmkonstrukte, mit denen Du Teile des von Dir 
  geschriebenen Codes wiederverwenden kannst
  (siehe https://de.wikipedia.org/wiki/Funktion_(Programmierung)[Wikipedia]).
* Funktionen sind in den Standardbiliotheken jeder Programmiersprache vorhanden, 
  viele R-Funktionen kennst Du wahrscheinlich schon: `sum()`, `mean()` 
  oder `summary()`.


=== Warum Funktionen?

* Damit Du Teile des von Dir geschriebenen Codes wiederverwenden kannst.
* Dann musst Du, wenn Du Fehler im Code entdeckst, diesen auch nur an einer 
  Stelle korrigieren.

==== Wann?

Immer wenn Du merkst, dass Du (alten) Code mehrfach kopierst und an anderer Stelle einf&uuml;gst und ihn kaum ver&auml;nderst, solltest Du dar&uuml;ber nachdenken, eine Funktion (oder mehrere) daraus zu machen. 

Praxis 
------

Eine Summenfunktion f&uuml;r R
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Warum wir diese Funktion nicht schreiben sollten
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//begin_no_slide
Eine Summenfunktion gibt es wahrscheinlich in jeder Programmiersprache, in **R** hei&szlig;t sie `sum()`. Diese Funktion ist besser, stabiler und schneller, als alles, das wir selbst programmieren k&ouml;nnen.
//end_no_slide

Warum wir es trotzdem tun
^^^^^^^^^^^^^^^^^^^^^^^^^

Ich habe die Summenberechnung ausf&uuml;hrlich als Beispiel zur Schleifenprogrammierung in 
https://fvafrcu.github.io/programmieren_in_r/#gute-schleifen[Programmieren in R] benutzt.

//begin.rcode 
a  <- c(2, 3, 4, 10)
value <- 0
for (a_i in a) {
    value <- value + a_i 
}
print(value)
//end.rcode

== Funktionen dokumentieren

== Funktionen verwalten

=== Lokal
Mit source

===  global 
Mit .Rprofile und einer Schleife

== Als Package
